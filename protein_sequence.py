from Bio import SeqIO
from Bio.Seq import Seq
from Bio.Alphabet import generic_dna, generic_protein
from Bio.Alphabet import IUPAC
for seq_record1 in SeqIO.parse("PSORS1.fasta", "fasta"):
	coding_dna1 = Seq(str(seq_record1.seq), generic_dna)
	protein_seq1 = coding_dna1.translate()
	print("Protein Sequence for PSORS1: ")
	print(protein_seq1)
	print("A:",protein_seq1.count("A"))
	print("B:",protein_seq1.count("B"))
	print("C:",protein_seq1.count("C"))
	print("D:",protein_seq1.count("D"))
	print("E:",protein_seq1.count("E"))
	print("F:",protein_seq1.count("F"))
	print("G:",protein_seq1.count("G"))
	print("H:",protein_seq1.count("H"))
	print("I:",protein_seq1.count("I"))
	print("J:",protein_seq1.count("J"))
	print("K:",protein_seq1.count("K"))
	print("L:",protein_seq1.count("L"))
	print("M:",protein_seq1.count("M"))
	print("N:",protein_seq1.count("N"))
	print("O:",protein_seq1.count("O"))
	print("P:",protein_seq1.count("P"))
	print("Q:",protein_seq1.count("Q"))
	print("R:",protein_seq1.count("R"))
	print("S:",protein_seq1.count("S"))
	print("T:",protein_seq1.count("T"))
	print("U:",protein_seq1.count("U"))
	print("V:",protein_seq1.count("V"))
	print("W:",protein_seq1.count("W"))
	print("Y:",protein_seq1.count("Y"))
	print("Z:",protein_seq1.count("Z"))
	print("X:",protein_seq1.count("X"))
	print("*:",protein_seq1.count("*"))
	print("-:",protein_seq1.count("-"))
	print("\n")

for seq_record2 in SeqIO.parse("PSORS2.fasta", "fasta"):
	coding_dna2 = Seq(str(seq_record2.seq), generic_dna)
	protein_seq2 = coding_dna2.translate()
	print("Protein Sequence for PSORS2")
	print(protein_seq2)
	print("A:",protein_seq2.count("A"))
	print("B:",protein_seq2.count("B"))
	print("C:",protein_seq2.count("C"))
	print("D:",protein_seq2.count("D"))
	print("E:",protein_seq2.count("E"))
	print("F:",protein_seq2.count("F"))
	print("G:",protein_seq2.count("G"))
	print("H:",protein_seq2.count("H"))
	print("I:",protein_seq2.count("I"))
	print("J:",protein_seq2.count("J"))
	print("K:",protein_seq2.count("K"))
	print("L:",protein_seq2.count("L"))
	print("M:",protein_seq2.count("M"))
	print("N:",protein_seq2.count("N"))
	print("O:",protein_seq2.count("O"))
	print("P:",protein_seq2.count("P"))
	print("Q:",protein_seq2.count("Q"))
	print("R:",protein_seq2.count("R"))
	print("S:",protein_seq2.count("S"))
	print("T:",protein_seq2.count("T"))
	print("U:",protein_seq2.count("U"))
	print("V:",protein_seq2.count("V"))
	print("W:",protein_seq2.count("W"))
	print("Y:",protein_seq2.count("Y"))
	print("Z:",protein_seq2.count("Z"))
	print("X:",protein_seq2.count("X"))
	print("*:",protein_seq2.count("*"))
	print("-:",protein_seq2.count("-"))
	print("\n")

for seq_record4 in SeqIO.parse("PSORS4.fasta", "fasta"):
	coding_dna4 = Seq(str(seq_record4.seq), generic_dna)
	protein_seq4 = coding_dna4.translate()
	print("Protein Sequence for PSORS4")
	print(protein_seq4)
	print("A:",protein_seq4.count("A"))
	print("B:",protein_seq4.count("B"))
	print("C:",protein_seq4.count("C"))
	print("D:",protein_seq4.count("D"))
	print("E:",protein_seq4.count("E"))
	print("F:",protein_seq4.count("F"))
	print("G:",protein_seq4.count("G"))
	print("H:",protein_seq4.count("H"))
	print("I:",protein_seq4.count("I"))
	print("J:",protein_seq4.count("J"))
	print("K:",protein_seq4.count("K"))
	print("L:",protein_seq4.count("L"))
	print("M:",protein_seq4.count("M"))
	print("N:",protein_seq4.count("N"))
	print("O:",protein_seq4.count("O"))
	print("P:",protein_seq4.count("P"))
	print("Q:",protein_seq4.count("Q"))
	print("R:",protein_seq4.count("R"))
	print("S:",protein_seq4.count("S"))
	print("T:",protein_seq4.count("T"))
	print("U:",protein_seq4.count("U"))
	print("V:",protein_seq4.count("V"))
	print("W:",protein_seq4.count("W"))
	print("Y:",protein_seq4.count("Y"))
	print("Z:",protein_seq4.count("Z"))
	print("X:",protein_seq4.count("X"))
	print("*:",protein_seq4.count("*"))
	print("-:",protein_seq4.count("-"))
	print("\n")

for seq_record5 in SeqIO.parse("PSORS5.fasta", "fasta"):
	coding_dna5 = Seq(str(seq_record5.seq), generic_dna)
	protein_seq5 = coding_dna5.translate()
	print("Protein Sequence for PSORS5")
	print(protein_seq5)
	print("A:",protein_seq5.count("A"))
	print("B:",protein_seq5.count("B"))
	print("C:",protein_seq5.count("C"))
	print("D:",protein_seq5.count("D"))
	print("E:",protein_seq5.count("E"))
	print("F:",protein_seq5.count("F"))
	print("G:",protein_seq5.count("G"))
	print("H:",protein_seq5.count("H"))
	print("I:",protein_seq5.count("I"))
	print("J:",protein_seq5.count("J"))
	print("K:",protein_seq5.count("K"))
	print("L:",protein_seq5.count("L"))
	print("M:",protein_seq5.count("M"))
	print("N:",protein_seq5.count("N"))
	print("O:",protein_seq5.count("O"))
	print("P:",protein_seq5.count("P"))
	print("Q:",protein_seq5.count("Q"))
	print("R:",protein_seq5.count("R"))
	print("S:",protein_seq5.count("S"))
	print("T:",protein_seq5.count("T"))
	print("U:",protein_seq5.count("U"))
	print("V:",protein_seq5.count("V"))
	print("W:",protein_seq5.count("W"))
	print("Y:",protein_seq5.count("Y"))
	print("Z:",protein_seq5.count("Z"))
	print("X:",protein_seq5.count("X"))
	print("*:",protein_seq5.count("*"))
	print("-:",protein_seq5.count("-"))
	print("\n")